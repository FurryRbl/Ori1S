using System;
using System.CodeDom.Compiler;

namespace System.Xml.Serialization
{
	/// <summary>Used within the .NET Framework to generate internal mappings to .NET Framework types for SOAP-encoded message parts in a WSDL document. </summary>
	// Token: 0x02000274 RID: 628
	public class SoapSchemaImporter : SchemaImporter
	{
		/// <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapSchemaImporter" /> class, specifying <see cref="T:System.Xml.Schema.XmlSchema" /> objects representing the XML schemas used by SOAP encoded messages defined in a WSDL document. </summary>
		/// <param name="schemas">A collection of <see cref="T:System.Xml.Schema.XmlSchema" /> objects.</param>
		// Token: 0x06001953 RID: 6483 RVA: 0x0008518C File Offset: 0x0008338C
		public SoapSchemaImporter(XmlSchemas schemas)
		{
			this._importer = new XmlSchemaImporter(schemas);
			this._importer.UseEncodedFormat = true;
		}

		/// <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapSchemaImporter" /> class, specifying <see cref="T:System.Xml.Schema.XmlSchema" /> objects representing the XML schemas used by SOAP encoded messages, plus classes being generated for bindings defined in a WSDL document. </summary>
		/// <param name="schemas">A collection of <see cref="T:System.Xml.Schema.XmlSchema" /> objects.</param>
		/// <param name="typeIdentifiers">A <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> object that specifies a collection of classes being generated for bindings defined in a WSDL document.</param>
		// Token: 0x06001954 RID: 6484 RVA: 0x000851AC File Offset: 0x000833AC
		public SoapSchemaImporter(XmlSchemas schemas, CodeIdentifiers typeIdentifiers)
		{
			this._importer = new XmlSchemaImporter(schemas, typeIdentifiers);
			this._importer.UseEncodedFormat = true;
		}

		/// <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapSchemaImporter" /> class specifying the schemas, compiler options, and the context of the schemas.</summary>
		/// <param name="schemas">A collection of <see cref="T:System.Xml.Schema.XmlSchema" /> objects.</param>
		/// <param name="options">One of the <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> that specifies various options for generating a .NET Framework type.</param>
		/// <param name="context">An <see cref="T:System.Xml.Serialization.ImportContext" /> that describes the context in which a set of schema are bound to .NET Framework code entities. </param>
		// Token: 0x06001955 RID: 6485 RVA: 0x000851D0 File Offset: 0x000833D0
		public SoapSchemaImporter(XmlSchemas schemas, CodeGenerationOptions options, ImportContext context)
		{
			this._importer = new XmlSchemaImporter(schemas, options, context);
			this._importer.UseEncodedFormat = true;
		}

		/// <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapSchemaImporter" /> class specifying the schemas, compiler options, and names of related code entities.</summary>
		/// <param name="schemas">A collection of <see cref="T:System.Xml.Schema.XmlSchema" /> objects.</param>
		/// <param name="typeIdentifiers">A <see cref="T:System.Xml.Serialization.CodeIdentifiers" />  that maintains a group of names for related code entities or type mappings that are generated by the .NET Framework's XML serialization infrastructure.</param>
		/// <param name="options">One of the <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> that specifies various options for generating a .NET Framework type.</param>
		// Token: 0x06001956 RID: 6486 RVA: 0x00085200 File Offset: 0x00083400
		public SoapSchemaImporter(XmlSchemas schemas, CodeIdentifiers typeIdentifiers, CodeGenerationOptions options)
		{
			this._importer = new XmlSchemaImporter(schemas, typeIdentifiers, options);
			this._importer.UseEncodedFormat = true;
		}

		/// <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapSchemaImporter" /> class specifying the schemas, compiler options, and names of related code entities.</summary>
		/// <param name="schemas">An <see cref="T:System.Xml.Serialization.XmlSchemas" />  containing a collection of <see cref="T:System.Xml.Schema.XmlSchema" /> objects.</param>
		/// <param name="options">One of the <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> that specifies various options for generating a .NET Framework type.</param>
		/// <param name="codeProvider">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />  used to generate the serialization code.</param>
		/// <param name="context">An <see cref="T:System.Xml.Serialization.ImportContext" /> that describes the context in which a set of schema are bound to .NET Framework code entities.</param>
		// Token: 0x06001957 RID: 6487 RVA: 0x00085230 File Offset: 0x00083430
		public SoapSchemaImporter(XmlSchemas schemas, CodeGenerationOptions options, CodeDomProvider codeProvider, ImportContext context)
		{
			this._importer = new XmlSchemaImporter(schemas, options, codeProvider, context);
			this._importer.UseEncodedFormat = true;
		}

		/// <summary>Generates internal type mapping information for the type of a SOAP-encoded element part defined in a WSDL document where a base type is specified. </summary>
		/// <returns>The .NET Framework type mapping information for a derived type corresponding to a WSDL message part.</returns>
		/// <param name="name">An <see cref="T:System.Xml.XmlQualifiedName" /> that specifies the name of an element's type for which a .NET Framework type is being generated.</param>
		/// <param name="baseType">A base type for the .NET Framework type being generated.</param>
		/// <param name="baseTypeCanBeIndirect">true to indicate that the type being generated may indirectly inherit from the base type; otherwise, false.</param>
		// Token: 0x06001958 RID: 6488 RVA: 0x00085260 File Offset: 0x00083460
		public XmlTypeMapping ImportDerivedTypeMapping(XmlQualifiedName name, Type baseType, bool baseTypeCanBeIndirect)
		{
			return this._importer.ImportDerivedTypeMapping(name, baseType, baseTypeCanBeIndirect);
		}

		/// <summary>Generates internal type mapping information for a single SOAP-encoded element part defined in a WSDL document. </summary>
		/// <returns>The .NET Framework type mapping for a single element part of a WSDL message definition.</returns>
		/// <param name="name">The message name.</param>
		/// <param name="ns">The message namespace.</param>
		/// <param name="member">A <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> object that provides information about the part element.</param>
		// Token: 0x06001959 RID: 6489 RVA: 0x00085270 File Offset: 0x00083470
		public XmlMembersMapping ImportMembersMapping(string name, string ns, SoapSchemaMember member)
		{
			return this._importer.ImportEncodedMembersMapping(name, ns, member);
		}

		/// <summary>Generates internal type mapping information for the element parts of a SOAP-encoded message defined in a WSDL document. </summary>
		/// <returns>The .NET Framework type mappings for the element parts of a WSDL message definition.</returns>
		/// <param name="name">The message name.</param>
		/// <param name="ns">The message namespace.</param>
		/// <param name="members">An array of type <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> that provides information about the part elements.</param>
		// Token: 0x0600195A RID: 6490 RVA: 0x00085280 File Offset: 0x00083480
		public XmlMembersMapping ImportMembersMapping(string name, string ns, SoapSchemaMember[] members)
		{
			return this._importer.ImportEncodedMembersMapping(name, ns, members, false);
		}

		/// <summary>Generates internal type mapping information for the element parts of a SOAP-encoded message defined in a WSDL document. </summary>
		/// <returns>The .NET Framework type mappings for the element parts of a WSDL message definition.</returns>
		/// <param name="name">The message name.</param>
		/// <param name="ns">The message namespace.</param>
		/// <param name="members">An array of type <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> that provides information about the part elements.</param>
		/// <param name="hasWrapperElement">true to have elements defined by the parts enclosed in an extra, wrapper element in a SOAP message; otherwise, false.</param>
		// Token: 0x0600195B RID: 6491 RVA: 0x00085294 File Offset: 0x00083494
		public XmlMembersMapping ImportMembersMapping(string name, string ns, SoapSchemaMember[] members, bool hasWrapperElement)
		{
			return this._importer.ImportEncodedMembersMapping(name, ns, members, hasWrapperElement);
		}

		/// <summary>Generates internal type mapping information for the element parts of a SOAP-encoded message defined in a WSDL document.</summary>
		/// <returns>The .NET Framework type mappings for the element parts of a WSDL message definition.</returns>
		/// <param name="name">The message name.</param>
		/// <param name="ns">The message namespace.</param>
		/// <param name="members">An array of type <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> that provides information about the part elements.</param>
		/// <param name="hasWrapperElement">true to have elements defined by the parts enclosed in an extra, wrapper element in a SOAP message; otherwise, false.</param>
		/// <param name="baseType">A base type for all .NET Framework types that are generated to correspond to message parts.</param>
		/// <param name="baseTypeCanBeIndirect">true to indicate that types corresponding to message parts can indirectly inherit from the base type; otherwise, false.</param>
		// Token: 0x0600195C RID: 6492 RVA: 0x000852A8 File Offset: 0x000834A8
		[MonoTODO]
		public XmlMembersMapping ImportMembersMapping(string name, string ns, SoapSchemaMember[] members, bool hasWrapperElement, Type baseType, bool baseTypeCanBeIndirect)
		{
			throw new NotImplementedException();
		}

		// Token: 0x04000A85 RID: 2693
		private XmlSchemaImporter _importer;
	}
}
