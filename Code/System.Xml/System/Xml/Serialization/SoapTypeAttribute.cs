using System;
using System.Text;

namespace System.Xml.Serialization
{
	/// <summary>Controls the schema generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> when a class instance is serialized as SOAP encoded XML.</summary>
	// Token: 0x02000278 RID: 632
	[AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct | AttributeTargets.Enum | AttributeTargets.Interface)]
	public class SoapTypeAttribute : Attribute
	{
		/// <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> class.</summary>
		// Token: 0x06001980 RID: 6528 RVA: 0x00086388 File Offset: 0x00084588
		public SoapTypeAttribute()
		{
		}

		/// <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> class and specifies the name of the XML type.</summary>
		/// <param name="typeName">The name of the XML type that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates when it serializes the class instance (and recognizes when it deserializes the class instance). </param>
		// Token: 0x06001981 RID: 6529 RVA: 0x00086398 File Offset: 0x00084598
		public SoapTypeAttribute(string typeName)
		{
			this.typeName = typeName;
		}

		/// <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> class and specifies the name and XML namespace of the type.</summary>
		/// <param name="typeName">The name of the XML type that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates when it serializes the class instance (and recognizes when it deserializes the class instance). </param>
		/// <param name="ns">The XML namespace of the type. </param>
		// Token: 0x06001982 RID: 6530 RVA: 0x000863B0 File Offset: 0x000845B0
		public SoapTypeAttribute(string typeName, string ns)
		{
			this.typeName = typeName;
			this.ns = ns;
		}

		/// <summary>Gets or sets a value that indicates whether to include the type in SOAP-encoded XML Schema documents.</summary>
		/// <returns>true to include the type in SOAP-encoded XML Schema documents; otherwise, false. The default is true.</returns>
		// Token: 0x17000757 RID: 1879
		// (get) Token: 0x06001983 RID: 6531 RVA: 0x000863D0 File Offset: 0x000845D0
		// (set) Token: 0x06001984 RID: 6532 RVA: 0x000863D8 File Offset: 0x000845D8
		public bool IncludeInSchema
		{
			get
			{
				return this.includeInSchema;
			}
			set
			{
				this.includeInSchema = value;
			}
		}

		/// <summary>Gets or sets the namespace of the XML type.</summary>
		/// <returns>The namespace of the XML type. The default is an empty string ("").</returns>
		// Token: 0x17000758 RID: 1880
		// (get) Token: 0x06001985 RID: 6533 RVA: 0x000863E4 File Offset: 0x000845E4
		// (set) Token: 0x06001986 RID: 6534 RVA: 0x000863EC File Offset: 0x000845EC
		public string Namespace
		{
			get
			{
				return this.ns;
			}
			set
			{
				this.ns = value;
			}
		}

		/// <summary>Gets or sets the name of the XML type.</summary>
		/// <returns>The name of the XML type. The default is the class name.</returns>
		// Token: 0x17000759 RID: 1881
		// (get) Token: 0x06001987 RID: 6535 RVA: 0x000863F8 File Offset: 0x000845F8
		// (set) Token: 0x06001988 RID: 6536 RVA: 0x00086414 File Offset: 0x00084614
		public string TypeName
		{
			get
			{
				if (this.typeName == null)
				{
					return string.Empty;
				}
				return this.typeName;
			}
			set
			{
				this.typeName = value;
			}
		}

		// Token: 0x06001989 RID: 6537 RVA: 0x00086420 File Offset: 0x00084620
		internal void AddKeyHash(StringBuilder sb)
		{
			sb.Append("STA ");
			KeyHelper.AddField(sb, 1, this.ns);
			KeyHelper.AddField(sb, 2, this.typeName);
			KeyHelper.AddField(sb, 3, this.includeInSchema);
			sb.Append('|');
		}

		// Token: 0x04000A8E RID: 2702
		private string ns;

		// Token: 0x04000A8F RID: 2703
		private string typeName;

		// Token: 0x04000A90 RID: 2704
		private bool includeInSchema = true;
	}
}
