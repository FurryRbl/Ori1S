using System;

namespace System.ComponentModel
{
	/// <summary>Provides a way to synchronously or asynchronously execute a delegate.</summary>
	// Token: 0x02000170 RID: 368
	public interface ISynchronizeInvoke
	{
		/// <summary>Gets a value indicating whether the caller must call <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" /> when calling an object that implements this interface.</summary>
		/// <returns>true if the caller must call <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />; otherwise, false.</returns>
		// Token: 0x170002E8 RID: 744
		// (get) Token: 0x06000CD4 RID: 3284
		bool InvokeRequired { get; }

		/// <summary>Asynchronously executes the delegate on the thread that created this object.</summary>
		/// <returns>An <see cref="T:System.IAsyncResult" /> interface that represents the asynchronous operation started by calling this method.</returns>
		/// <param name="method">A <see cref="T:System.Delegate" /> to a method that takes parameters of the same number and type that are contained in <paramref name="args" />. </param>
		/// <param name="args">An array of type <see cref="T:System.Object" /> to pass as arguments to the given method. This can be null if no arguments are needed. </param>
		// Token: 0x06000CD5 RID: 3285
		IAsyncResult BeginInvoke(Delegate method, object[] args);

		/// <summary>Waits until the process started by calling <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" /> completes, and then returns the value generated by the process.</summary>
		/// <returns>An <see cref="T:System.Object" /> that represents the return value generated by the asynchronous operation.</returns>
		/// <param name="result">An <see cref="T:System.IAsyncResult" /> interface that represents the asynchronous operation started by calling <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />. </param>
		// Token: 0x06000CD6 RID: 3286
		object EndInvoke(IAsyncResult result);

		/// <summary>Synchronously executes the delegate on the thread that created this object and marshals the call to the creating thread.</summary>
		/// <returns>An <see cref="T:System.Object" /> that represents the return value from the delegate being invoked, or null if the delegate has no return value.</returns>
		/// <param name="method">A <see cref="T:System.Delegate" /> that contains a method to call, in the context of the thread for the control. </param>
		/// <param name="args">An array of type <see cref="T:System.Object" /> that represents the arguments to pass to the given method. This can be null if no arguments are needed. </param>
		// Token: 0x06000CD7 RID: 3287
		object Invoke(Delegate method, object[] args);
	}
}
